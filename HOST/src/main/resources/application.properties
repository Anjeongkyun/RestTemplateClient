#maria db 접속 정보
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/web_db
spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://rnd.daontec.co.kr:13306/daonDB?characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=bsra
spring.datasource.password=bsra12

#Hikari 
spring.datasource.hikari.username=bsra
spring.datasource.hikari.password=bsra12
spring.datasource.hikari.minimum-idle: 10
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.transaction-isolation= TRANSACTION_READ_UNCOMMITTED
spring.datasource.hikari.connectionTimeout : 30000
spring.datasource.hikari.idle-timeout: 600000
spring.datasource.hikari.maxLifetime : 1800000
spring.datasource.hikari.poolName : HikariCP
spring.datasource.hikari.readOnly : false
spring.datasource.hikari.connection-test-query=SELECT 1

logging.level.com.zaxxer.hikari=ERROR 
logging.level.com.zaxxer.hikari.HikariConfig=ERROR

#jpa 
#table 자동생성.
#none : DDL 핸들링 작업을 수행하지 않는다.
#create : 기존에 존재하는 스키마를 삭제하고 새로 생성한다.
#create-drop : 스키마를 생성하고 어플리케이션이 종료될 때 삭제한다.
#update : 기존의 스키마를 유지하며 JPA에 의해 변경된 부분만 추가한다.
#validate : 엔티티와 테이블이 정상적으로 매핑되어있는지만 검증한다.
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
#table 자동생성시 camelCase 적용(사용안하면 언더바(_) 구분 user_info)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Redis
spring.redis.host=localhost
spring.redis.port=6379

#Auto Complie
#springboot live reload default port 35729
spring.devtools.livereload.enabled=true
#spring.devtools.livereload.port=35731

#autoconfigure log level
logging.level.org.springframework.boot.autoconfigure.logging=info

#view 경로 설정
#spring.mvc.view.prefix=/views/
#spring.mvc.view.suffix=.html

#기본 포트 설정
server.port=8080

# 동적file 전송시 압축여부
server.compression.enabled=true

# mybatis 매핑 type을 짧게 쓰기 위한 설정 # mapper.xml에서 resultType을 지정할 때 경로.Vo 대신 Vo로 간략히 할 수 있다. 
#mybatis.type-aliases-package=com.daon.host.vo
# mapper.xml 위치 지정 # **은 하위 폴더 레벨에 상관없이 모든 경로를 뜻하며, *는 아무 이름이나 와도 된다는것을 뜻합니다. 
#mybatis.mapper-locations=mappers/**/*Mapper.xml
#mybatis.mapper-locations=mappers/*Mapper.xml

# log 프로필 설정 
spring.profiles.active=local
#spring.profiles.active=dev
#spring.profiles.active=prod

# 오류 응답에 exception의 내용을 포함할지 여부 
server.error.include-exception=true
# 오류 응답에 stacktrace 내용을 포함할 지 여부
server.error.include-stacktrace=always

# jwt
# HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secret key를 사용해야 한다.
# Secret 값은 특정 문자열을 Base64 로 인코딩한 값 사용 (아래 명령어를 터미널에 쳐보면 그대로 나옴)
# $ echo 'spring-boot-security-jwt-tutorial-jiwoon-spring-boot-security-jwt-tutorial' | base64
jwt.secret=c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWppd29vbi1zcHJpbmctYm9vdC1zZWN1cml0eS1qd3QtdHV0b3JpYWwK